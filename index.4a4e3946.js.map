{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAa,EAAG,EAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,EAC3C,EAAa,EAAE,CAEb,EAAgB,SAAC,CAAvB,EACE,MAAO,CAAC,EAAO,OAAO,CAAC,MAAO,GAChC,EAEA,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAG,gBAAgB,CAAC,QAAS,SAAC,CAA9B,EACE,IAAM,EAAI,EAAE,MAAM,CAAC,SAAS,CACtB,EAAO,EAAM,OAAO,CAAC,EAAE,CAI7B,EAAa,AAHC,EAAG,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,EAGpB,IAAI,CAAC,SAAC,CAAA,CAAG,CAA3B,EACE,IAAM,EAAY,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,CAClC,EAAY,EAAE,KAAK,CAAC,EAAE,CAAC,WAAW,OAExC,AAAI,AAAyB,WAAzB,EAAE,MAAM,CAAC,WAAW,CACf,EAAc,GAAa,EAAc,GAG3C,EAAU,aAAa,CAAC,EACjC,GAEA,AAAA,EAAK,MAAM,CAAX,KAAA,CAAA,EAAY,EAAG,GACjB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tableHead = _to_consumable_array(table.tHead.rows[0].cells);\nvar sortedRows = [];\nvar stringToDigit = function(string) {\n    return +string.replace(/\\D/g, \"\");\n};\ntableHead.forEach(function(el) {\n    el.addEventListener(\"click\", function(e) {\n        var _body;\n        var i = e.target.cellIndex;\n        var body = table.tBodies[0];\n        var rows = _to_consumable_array(table.tBodies[0].rows);\n        // const sortedBody = document.createElement('body');\n        sortedRows = rows.sort(function(a, b) {\n            var contentsA = a.cells[i].textContent;\n            var contentsB = b.cells[i].textContent;\n            if (e.target.textContent === \"Salary\") return stringToDigit(contentsA) - stringToDigit(contentsB);\n            return contentsA.localeCompare(contentsB);\n        });\n        (_body = body).append.apply(_body, _to_consumable_array(sortedRows));\n    });\n});\n\n//# sourceMappingURL=index.4a4e3946.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tableHead = [...table.tHead.rows[0].cells];\nlet sortedRows = [];\n\nconst stringToDigit = (string) => {\n  return +string.replace(/\\D/g, '');\n};\n\ntableHead.forEach((el) => {\n  el.addEventListener('click', (e) => {\n    const i = e.target.cellIndex;\n    const body = table.tBodies[0];\n    const rows = [...table.tBodies[0].rows];\n    // const sortedBody = document.createElement('body');\n\n    sortedRows = rows.sort((a, b) => {\n      const contentsA = a.cells[i].textContent;\n      const contentsB = b.cells[i].textContent;\n\n      if (e.target.textContent === 'Salary') {\n        return stringToDigit(contentsA) - stringToDigit(contentsB);\n      }\n\n      return contentsA.localeCompare(contentsB);\n    });\n\n    body.append(...sortedRows);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","document","querySelector","tableHead","tHead","rows","cells","sortedRows","stringToDigit","string","replace","forEach","el","addEventListener","e","target","cellIndex","body","tBodies","sort","a","b","contentsA","textContent","contentsB","localeCompare","append","apply"],"version":3,"file":"index.4a4e3946.js.map"}